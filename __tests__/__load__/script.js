// Auto-generated by the postman-to-k6 converter

import './libs/shim/core.js';
import './libs/shim/urijs.js';
import { check, group } from 'k6';
import http from 'k6/http';

export const options = {
    stages: [
        { duration: '10s', target: 100 }, // simulate ramp-up of traffic from 1 to 100 users over 5 minutes.
        { duration: '10s', target: 100 }, // stay at 100 users for 10 minutes
        { duration: '10s', target: 0 } // ramp-down to 0 users
    ],
    thresholds: {
        http_req_duration: ['p(99)<2000'], // 99% of requests must complete below 1.5s,
        http_req_blocked: ['p(99)<1'],
        http_req_waiting: ['p(99)<2000'],
        http_req_failed: ['rate<0.01'] // http errors should be less than 1%
    }
};

const baseUrl = 'http://localhost:9000';
const Request = Symbol.for('request');
postman[Symbol.for('initial')]({
    options,
    environment: {
        baseUrl
    }
});

export function setup() {
    let res = http.post(`${baseUrl}/login`, {
        username: 'rushabh@wednesday.is',
        password: 'Wednesday@123'
    });
    check(res, {
        'status is 200': r => r.status === 200
    });
    return { accessToken: res.json().data.access_token };
}
export default function (data) {
    group('Orders', function () {
        postman[Request]({
            name: 'Create Order',
            id: '71eb778d-0a8f-4798-805b-8e922ec3f16f',
            method: 'POST',
            address: '{{baseUrl}}/orders',
            data: '{\n    "purchasedProducts": [\n        {\n            "name": "Handcrafted Steel Keyboard",\n            "price": 39000,\n            "category": "Computers",\n            "totalSales": 0,\n            "quantityAverage": 0,\n            "schema": 1\n        },\n        {\n            "name": "Incredible Granite Soap",\n            "price": 15400,\n            "category": "Garden",\n            "totalSales": 0,\n            "quantityAverage": 0,\n            "schema": 1\n        }\n    ],\n    "totalPrice": 54400\n}',
            headers: {
                'Content-Type': 'application/json',
                Authorization: `bearer ${data.accessToken}`
            },
            post(response) {
                pm.test('Status code is 200', function () {
                    pm.response.to.have.status(200);
                    var jsonData = JSON.parse(responseBody);
                    postman.setEnvironmentVariable(
                        'order_id',
                        jsonData.data._id
                    );
                });
            }
        });

        postman[Request]({
            name: 'Fetch Order by _id',
            id: '2518c9ce-30f1-4f76-9025-403149767ca4',
            method: 'GET',
            address: '{{baseUrl}}/orders/{{order_id}}',
            headers: {
                Authorization: `bearer ${data.accessToken}`,
                'Content-Type': 'application/json'
            }
        });

        postman[Request]({
            name: 'Fetch Orders',
            id: 'adac227c-3609-4667-902f-abc435adfa9f',
            method: 'GET',
            address: '{{baseUrl}}/orders?limit=99&page=1',
            headers: {
                'Content-Type': 'application/json',
                Authorization: `bearer ${data.accessToken}`
            }
        });

        postman[Request]({
            name: 'Fetch Referenced Orders',
            id: '3da304b8-67e7-416b-a63b-778f31ad9c29',
            method: 'GET',
            address: '{{baseUrl}}/referenced-orders?limit=99&page=1',
            headers: {
                'Content-Type': 'application/json',
                Authorization: `bearer ${data.accessToken}`
            }
        });

        postman[Request]({
            name: 'Fetch Unsharded Orders',
            id: 'c55265c4-2fd1-4252-83a4-163c6ea955b0',
            method: 'GET',
            address: '{{baseUrl}}/unsharded-orders?limit=99&page=1',
            headers: {
                Authorization: `bearer ${data.accessToken}`,
                'Content-Type': 'application/json'
            }
        });

        postman[Request]({
            name: 'Fetch Unsharded Referenced Orders',
            id: 'b1ed181e-ce92-4e90-a986-293ee5670f4e',
            method: 'GET',
            address: '{{baseUrl}}/unsharded-referenced-orders?limit=99&page=1',
            headers: {
                'Content-Type': 'application/json',
                Authorization: `bearer ${data.accessToken}`
            }
        });
    });
}
